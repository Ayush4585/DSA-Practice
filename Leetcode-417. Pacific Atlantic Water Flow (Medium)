class Solution {
public:
    int dir[4][4] = {{0, 1}, {1, 0},{0, -1}, {-1, 0}};
    
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& arr) {
        queue<pair<int, pair<int, int>>> atlantic;
        queue<pair<int, pair<int, int>>> pacific;
        int n = arr.size(), m = arr[0].size();
        vector<vector<int>> pacflag(n, vector<int>(m, -1));
        vector<vector<int>> atlflag(n, vector<int>(m, -1));

        for (int i = 0; i < n; i++) {
            pacflag[i][0] = 0;
            pacific.push({arr[i][0], {i, 0}});
        }
        for (int j = 0; j < m; j++) {
            pacflag[0][j] = 0;
            pacific.push({arr[0][j], {0, j}});
        }

        for (int i = 0; i < n; i++) {
            atlflag[i][m - 1] = 0;
            atlantic.push({arr[i][m - 1], {i, m - 1}});
        }
        for (int j = 0; j < m; j++) {
            atlflag[n - 1][j] = 0;
            atlantic.push({arr[n - 1][j], {n - 1, j}});
        }

     

        while (!pacific.empty()) {
            auto it = pacific.front();
            pacific.pop();
            for (int i = 0; i < 4; i++) {
                int nr = dir[i][0] + it.second.first;
                int nc = dir[i][1] + it.second.second;
                if (nr >= 0 && nr < n && nc >= 0 && nc < m &&
                    pacflag[nr][nc] == -1 && arr[nr][nc] >= it.first) {
                    pacific.push({arr[nr][nc], {nr, nc}});
                    pacflag[nr][nc] = 0;
                }
            }
        }
        while (!atlantic.empty()) {
            auto it = atlantic.front();
            atlantic.pop();
            for (int i = 0; i < 4; i++) {
                int nr = dir[i][0] + it.second.first;
                int nc = dir[i][1] + it.second.second;
                if (nr >= 0 && nr < n && nc >= 0 && nc < m &&
                    atlflag[nr][nc] == -1 && arr[nr][nc] >= it.first) {
                    atlantic.push({arr[nr][nc], {nr, nc}});
                    atlflag[nr][nc] = 0;
                }
            }
        }
        vector<vector<int>> ans;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (atlflag[i][j] == 0 && pacflag[i][j] == 0) {
                    ans.push_back({i, j});
                }
            }
        }
        return ans;
    }
};
